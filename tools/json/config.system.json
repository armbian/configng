{
    "menu": [
        {
            "id": "System",
            "description": "System wide and admin settings",
            "sub": [
                {
                    "id": "Kernel",
                    "description": "Alternative kernels, headers, rolling updates, overlays",
                    "sub": [
                        {
                            "id": "SY201",
                            "description": "Install alternative kernels",
                            "about": "Switching between kernels might change functionality of your device. \n\nIt might fail to boot!",
                            "command": [
                                "module_armbian_firmware select"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": ""
                        },
                        {
                            "id": "SY204",
                            "description": "Install Linux headers",
                            "command": [
                                "module_armbian_firmware headers install"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "! module_armbian_firmware headers status"
                        },
                        {
                            "id": "SY205",
                            "description": "Remove Linux headers",
                            "command": [
                                "module_armbian_firmware headers remove"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "module_armbian_firmware headers status"
                        },
                        {
                            "id": "SY210",
                            "description": "Manage device tree overlays",
                            "command": [
                                "manage_dtoverlays"
                            ],
                            "status": "Stable",
                            "author": "@viraniac @igorpecovnik",
                            "condition": "[ -d /boot/dtb/ ] && [ -f /boot/armbianEnv.txt ]"
                        },
                        {
                            "id": "SY300",
                            "description": "Select Odroid board configuration",
                            "command": [
                                "manage_odroid_board select"
                            ],
                            "status": "Preview",
                            "author": "",
                            "condition": "[ $BOARDFAMILY == odroidxu4 ]"
                        },
                        {
                            "id": "SY010",
                            "description": "Edit the boot environment",
                            "about": "This will open /boot/armbianEnv.txt file to edit\nCTRL+S to save\nCTLR+X to exit\nwould you like to continue?",
                            "command": [
                                "nano /boot/armbianEnv.txt"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "[[ -f /boot/armbianEnv.txt ]]"
                        }
                    ]
                },
                {
                    "id": "Storage",
                    "description": "Install to internal media, ZFS, NFS, read-only rootfs",
                    "sub": [
                        {
                            "id": "SY001",
                            "description": "Install to internal storage",
                            "command": [
                                "armbian-install"
                            ],
                            "status": "Preview",
                            "author": "@igorpecovnik",
                            "condition": "[[ -f /sbin/armbian-install || -f /usr/bin/armbian-install ]]"
                        },
                        {
                            "id": "SY220",
                            "description": "ZFS filesystem - enable support",
                            "command": [
                                "module_zfs install"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "! module_zfs status && linux-version compare \"${KERNELID}\" le \"$(module_zfs kernel_max)\""
                        },
                        {
                            "id": "SY221",
                            "description": "ZFS filesystem - remove support",
                            "command": [
                                "module_zfs remove"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "module_zfs status"
                        },
                        {
                            "id": "SY007",
                            "description": "Enable read only filesystem",
                            "prompt": "This will enable Armbian read-only filesystem.\n",
                            "command": [
                                "module_overlayfs install"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "module_overlayfs status"
                        },
                        {
                            "id": "SY008",
                            "description": "Disable read only filesystem",
                            "prompt": "This will disable Armbian read-only filesystem.\n",
                            "command": [
                                "module_overlayfs remove"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "! module_overlayfs status"
                        },
                        {
                            "id": "NFS01",
                            "description": "Enable Network filesystem (NFS) support",
                            "command": [
                                "module_nfs install"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "! pkg_installed nfs-common"
                        },
                        {
                            "id": "NFS02",
                            "description": "Disable Network filesystem (NFS) support",
                            "command": [
                                "module_nfs remove"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "pkg_installed nfs-common"
                        },
                        {
                            "id": "NFS05",
                            "description": "Manage NFS Server",
                            "condition": "pkg_installed nfs-common",
                            "sub": [
                                    {
                                        "id": "NFS06",
                                        "description": "Enable network filesystem (NFS) daemon",
                                        "command": [
                                            "module_nfsd install"
                                        ],
                                        "status": "Stable",
                                        "author": "@igorpecovnik",
                                        "condition": "! module_nfsd status"
                                    },
                                    {
                                        "id": "NFS07",
                                        "description": "Configure network filesystem (NFS) daemon",
                                        "command": [
                                            "module_nfsd manage"
                                        ],
                                        "status": "Stable",
                                        "author": "@igorpecovnik",
                                        "condition": "module_nfsd status"
                                    },
                                    {
                                        "id": "NFS08",
                                        "description": "Remove network filesystem (NFS) daemon",
                                        "command": [
                                            "module_nfsd remove"
                                        ],
                                        "status": "Stable",
                                        "author": "@igorpecovnik",
                                        "condition": "module_nfsd status"
                                    },
                                    {
                                        "id": "NFS09",
                                        "description": "Show network filesystem (NFS) daemon clients",
                                        "command": [
                                            "module_nfsd clients"
                                        ],
                                        "status": "Stable",
                                        "author": "@igorpecovnik",
                                        "condition": "module_nfsd status && [[ ${NFS_CLIENTS_NUMBER} -gt 0 ]]"
                                    }
                                ]
                        },
                        {
                            "id": "NFS20",
                            "description": "Manage NFS Client",
                            "condition": "pkg_installed nfs-common",
                            "sub": [
                                {
                                    "id": "NFS21",
                                    "description": "Find NFS servers in subnet and mount shares",
                                    "command": [
                                        "module_nfs servers"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "pkg_installed nfs-common"
                                },
                                {
                                    "id": "NFS22",
                                    "description": "Show and manage NFS mounts",
                                    "command": [
                                        "module_nfs mounts"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[[ -n $(mount --type=nfs4) ]]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "Access",
                    "description": "Manage SSH daemon options, enable 2FA",
                    "sub": [
                        {
                            "id": "SY101",
                            "description": "Disable root login",
                            "command": [
                                "sed -i \"s|^#\\?PermitRootLogin.*|PermitRootLogin no|\" /etc/ssh/sshd_config",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^PermitRootLogin yes'  /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY102",
                            "description": "Enable root login",
                            "command": [
                                "sed -i \"s/^#\\?PermitRootLogin.*/PermitRootLogin yes/\" /etc/ssh/sshd_config",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^PermitRootLogin no' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY103",
                            "description": "Disable password login",
                            "command": [
                                "sed -i \"s/^#\\?PasswordAuthentication.*/PasswordAuthentication no/\" /etc/ssh/sshd_config",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'PasswordAuthentication yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY104",
                            "description": "Enable password login",
                            "command": [
                                "sed -i \"s/^#\\?PasswordAuthentication.*/PasswordAuthentication yes/\" /etc/ssh/sshd_config",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'PasswordAuthentication no' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY105",
                            "description": "Disable Public key authentication login",
                            "command": [
                                "sed -i \"s/^#\\?PubkeyAuthentication.*/PubkeyAuthentication no/\" /etc/ssh/sshd_config",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'PubkeyAuthentication yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY106",
                            "description": "Enable Public key authentication login",
                            "command": [
                                "sed -i \"s/^#\\?PubkeyAuthentication.*/PubkeyAuthentication yes/\" /etc/ssh/sshd_config",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'PubkeyAuthentication no' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY107",
                            "description": "Disable OTP authentication",
                            "command": [
                                "clear",
                                "! pkg_installed libpam-google-authenticator && ! pkg_installed qrencode || pkg_remove libpam-google-authenticator qrencode",
                                "sed -i \"s/^#\\?ChallengeResponseAuthentication.*/ChallengeResponseAuthentication no/\" /etc/ssh/sshd_config || sed -i \"0,/KbdInteractiveAuthentication/s//ChallengeResponseAuthentication yes/\" /etc/ssh/sshd_config",
                                "sed -i '/^auth required pam_google_authenticator.so nullok/ d' /etc/pam.d/sshd",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'ChallengeResponseAuthentication yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY108",
                            "description": "Enable OTP authentication",
                            "command": [
                                "pkg_installed libpam-google-authenticator || pkg_install libpam-google-authenticator",
                                "pkg_installed qrencode || pkg_install qrencode",
                                "sed -i \"s/^#\\?ChallengeResponseAuthentication.*/ChallengeResponseAuthentication yes/\" /etc/ssh/sshd_config",
                                "sed -i $'/KbdInteractiveAuthentication/{iChallengeResponseAuthentication yes\\n:a;n;ba}' /etc/ssh/sshd_config || sed -n -i '/password updating/{p;:a;N;/@include common-password/!ba;s/.*\\n/auth required pam_google_authenticator.so nullok\\nauth required pam_permit.so\\n/};p' /etc/pam.d/sshd",
                                "[ ! -f /root/.google_authenticator ] && qr_code generate",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "! pkg_installed libpam-google-authenticator || ! pkg_installed qrencode || grep -q '^ChallengeResponseAuthentication no' /etc/ssh/sshd_config || ! grep -q 'ChallengeResponseAuthentication' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY109",
                            "description": "Generate new OTP authentication QR code",
                            "command": [
                                "qr_code generate"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^ChallengeResponseAuthentication yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY110",
                            "description": "Show OTP authentication QR code",
                            "command": [
                                "qr_code"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^ChallengeResponseAuthentication yes' /etc/ssh/sshd_config && [ -f /root/.google_authenticator ]"
                        },
                        {
                            "id": "SY111",
                            "description": "Disable last login banner",
                            "command": [
                                "sed -i \"s/^#\\?PrintLastLog.*/PrintLastLog no/\" /etc/ssh/sshd_config",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^PrintLastLog yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY112",
                            "description": "Enable last login banner",
                            "command": [
                                "sed -i \"s/^#\\?PrintLastLog.*/PrintLastLog yes/\" /etc/ssh/sshd_config",
                                "srv_restart ssh"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^PrintLastLog no' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SSH200",
                            "description": "Sandboxed & containerised SSH server",
                            "about": "This operation will install SSH server.",
                            "command": [
                                "module_openssh-server install"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "! module_openssh-server status"
                        },
                        {
                            "id": "SSH201",
                            "description": "Remove sandboxed SSH server",
                            "about": "This operation will remove SSH server.",
                            "command": [
                                "module_openssh-server remove"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "module_openssh-server status"
                        },
                        {
                            "id": "SSH202",
                            "description": "Purge sandboxed SSH server with data folder",
                            "about": "This operation will purge SSH server with data folder.",
                            "command": [
                                "module_openssh-server purge"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "module_openssh-server status"
                        }

                    ]
                },
                {
                    "id": "User",
                    "description": "Change shell, adjust MOTD",
                    "sub": [
                        {
                            "id": "SY005",
                            "description": "Change shell system wide to BASH",
                            "about": "This will switch system wide shell to BASH",
                            "command": [ "manage_zsh disable" ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "[[ $(cat /etc/passwd | grep \"^root:\" | rev | cut -d\":\" -f1 | cut -d\"/\" -f1| rev) == \"zsh\" ]]"
                        },
                        {
                            "id": "SY006",
                            "description": "Change shell system wide to ZSH",
                            "about": "This will switch system wide shell to ZSH",
                            "command": [ "manage_zsh enable" ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "[[ $(cat /etc/passwd | grep \"^root:\" | rev | cut -d\":\" -f1 | cut -d\"/\" -f1| rev) == \"bash\" ]]"
                        },
                        {
                            "id": "SY009",
                            "description": "Adjust welcome screen (motd)",
                            "command": [
                                "adjust_motd"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "[ -f /etc/default/armbian-motd ]"
                        }
                    ]
                },
                {
                    "id": "Updates",
                    "description": "OS updates and distribution upgrades",
                    "status": "Active",
                    "condition": "[ -f /etc/armbian-distribution-status ] && release_upgrade rolling verify || release_upgrade stable verify",
                    "sub": [
                        {
                            "id": "SY202",
                            "description": "Enable Armbian firmware upgrades",
                            "about": "This will enable Armbian kernel upgrades that are currently put on hold.",
                            "command": [
                                "module_armbian_firmware unhold"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "module_armbian_firmware hold status"
                        },
                        {
                            "id": "SY203",
                            "description": "Disable Armbian kernel upgrades",
                            "about": "Disable Armbian kernel/firmware upgrades",
                            "command": [
                                "module_armbian_firmware hold"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "! module_armbian_firmware hold status"
                        },
                        {
                            "id": "SY206",
                            "description": "Switch system to rolling packages repository",
                            "about": "This will switch OS to rolling releases.",
                            "command": [
                                "module_armbian_firmware repository rolling"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "module_armbian_firmware repository stable status"
                        },
                        {
                            "id": "SY207",
                            "description": "Switch system to stable packages repository",
                            "about": "This will switch OS to stable releases",
                            "command": [
                                "module_armbian_firmware repository stable"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "module_armbian_firmware repository rolling status"
                        },
                        {
                            "id": "SY101",
                            "description": "Distribution upgrade to latest stable / LTS",
                            "about": "Release upgrade is irriversible operation which upgrades all packages. \n\nResoulted upgrade might break your build beyond repair!",
                            "command": [
                                "release_upgrade stable"
                            ],
                            "status": "Disabled",
                            "author": "@igorpecovnik",
                            "condition": "[ -f /etc/armbian-distribution-status ] && release_upgrade stable verify"
                        },
                        {
                            "id": "SY102",
                            "description": "Distribution upgrade to rolling unstable",
                            "about": "Release upgrade is irriversible operation which upgrades all packages. \n\nResoulted upgrade might break your build beyond repair!",
                            "command": [
                                "release_upgrade rolling"
                            ],
                            "status": "Disabled",
                            "author": "@igorpecovnik",
                            "condition": "[ -f /etc/armbian-distribution-status ] && release_upgrade rolling verify"
                        },
                        {
                            "id": "WTC001",
                            "description": "Enable automating Docker container base images updating",
                            "command": [
                                "module_watchtower install"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "! module_watchtower status && pkg_installed docker-ce"
                        },
                        {
                            "id": "WTC002",
                            "description": "Disable automating Docker container base images updating",
                            "command": [
                                "module_watchtower remove"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "module_watchtower status && pkg_installed docker-ce"
                        },
                        {
                            "id": "UNAT01",
                            "description": "Enable automatic package updates.",
                            "command": [
                                "module_armbian_upgrades install"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "! module_armbian_upgrades status"
                        },
                        {
                            "id": "UNAT02",
                            "description": "Configure automatic package updates",
                            "command": [
                                "module_armbian_upgrades configure"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "module_armbian_upgrades status"
                        },
                        {
                            "id": "UNAT03",
                            "description": "Disable automatic package updates",
                            "command": [
                                "module_armbian_upgrades remove"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "module_armbian_upgrades status"
                        }
                        
                    ]
                }
            ]
        }
    ]
}
