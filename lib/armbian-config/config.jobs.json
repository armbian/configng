{
    "menu": [
        {
            "id": "System",
            "description": "System wide and admin settings",
            "sub": [
                {
                    "id": "SY001",
                    "description": "Enable Armbian firmware upgrades",
                    "about": "This will enable Armbian kernel upgrades that are currently put on hold.",
                    "command": [
                        "armbian_fw_manipulate unhold"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "[[ -n \"$(apt-mark showhold)\" ]]"
                },
                {
                    "id": "SY002",
                    "description": "Disable Armbian kernel upgrades",
                    "about": "Disable Armbian kernel/firmware upgrades",
                    "command": [
                        "armbian_fw_manipulate hold"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "[[ -z \"$(apt-mark showhold)\" ]]"
                },
                {
                    "id": "SY003",
                    "description": "Edit the boot environment",
                    "about": "This will open /boot/armbianEnv.txt file to edit\nCTRL+S to save\nCTLR+X to exit\nwould you like to continue?",
                    "command": [
                        "nano /boot/armbianEnv.txt"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "[[ -f /boot/armbianEnv.txt ]]"
                },
                {
                    "id": "SY004",
                    "description": "Install Linux headers",
                    "command": [
                        "Headers_install"
                    ],
                    "status": "Preview",
                    "author": "@Tearran",
                    "condition": "! are_headers_installed"
                },
                {
                    "id": "SY005",
                    "description": "Remove Linux headers",
                    "command": [
                        "Headers_remove"
                    ],
                    "status": "Preview",
                    "author": "@Tearran",
                    "condition": "are_headers_installed"
                },
                {
                    "id": "SY006",
                    "description": "Install to internal storage",
                    "command": [
                        "armbian-install"
                    ],
                    "status": "Preview",
                    "author": "@igorpecovnik",
                    "condition": "[[ -f /sbin/armbian-install ]]"
                },
                {
                    "id": "SY007",
                    "description": "Manage SSH login options",
                    "sub": [
                        {
                            "id": "SY101",
                            "description": "Disable root login",
                            "command": [
                                "sed -i \"s|^#\\?PermitRootLogin.*|PermitRootLogin no|\" /etc/ssh/sshd_config",
                                "systemctl restart sshd.service 2>/dev/null | systemctl restart ssh.service 2>/dev/null"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^PermitRootLogin yes'  /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY102",
                            "description": "Enable root login",
                            "command": [
                                "sed -i \"s/^#\\?PermitRootLogin.*/PermitRootLogin yes/\" /etc/ssh/sshd_config",
                                "systemctl restart sshd.service 2>/dev/null | systemctl restart ssh.service 2>/dev/null"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^PermitRootLogin no' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY103",
                            "description": "Disable password login",
                            "command": [
                                "sed -i \"s/^#\\?PasswordAuthentication.*/PasswordAuthentication no/\" /etc/ssh/sshd_config",
                                "systemctl restart sshd.service 2>/dev/null | systemctl restart ssh.service 2>/dev/null"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'PasswordAuthentication yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY104",
                            "description": "Enable password login",
                            "command": [
                                "sed -i \"s/^#\\?PasswordAuthentication.*/PasswordAuthentication yes/\" /etc/ssh/sshd_config",
                                "systemctl restart sshd.service 2>/dev/null | systemctl restart ssh.service 2>/dev/null"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'PasswordAuthentication no' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY105",
                            "description": "Disable Public key authentication login",
                            "command": [
                                "sed -i \"s/^#\\?PubkeyAuthentication.*/PubkeyAuthentication no/\" /etc/ssh/sshd_config",
                                "systemctl restart sshd.service 2>/dev/null | systemctl restart ssh.service 2>/dev/null"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'PubkeyAuthentication yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY106",
                            "description": "Enable Public key authentication login",
                            "command": [
                                "sed -i \"s/^#\\?PubkeyAuthentication.*/PubkeyAuthentication yes/\" /etc/ssh/sshd_config",
                                "systemctl restart sshd.service 2>/dev/null | systemctl restart ssh.service 2>/dev/null"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'PubkeyAuthentication no' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY107",
                            "description": "Disable OTP authentication",
                            "command": [
                                "clear",
                                "! check_if_installed libpam-google-authenticator && ! check_if_installed qrencode || debconf-apt-progress -- apt-get -y purge libpam-google-authenticator qrencode",
                                "sed -i \"s/^#\\?ChallengeResponseAuthentication.*/ChallengeResponseAuthentication no/\" /etc/ssh/sshd_config || sed -i \"0,/KbdInteractiveAuthentication/s//ChallengeResponseAuthentication yes/\" /etc/ssh/sshd_config",
                                "sed -i '/^auth required pam_google_authenticator.so nullok/ d' /etc/pam.d/sshd",
                                "systemctl restart sshd.service 2>/dev/null | systemctl restart ssh.service 2>/dev/null"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q 'ChallengeResponseAuthentication yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY108",
                            "description": "Enable OTP authentication",
                            "command": [
                                "check_if_installed libpam-google-authenticator || debconf-apt-progress -- apt-get -y install libpam-google-authenticator",
                                "check_if_installed qrencode || debconf-apt-progress -- apt-get -y install qrencode",
                                "sed -i \"s/^#\\?ChallengeResponseAuthentication.*/ChallengeResponseAuthentication yes/\" /etc/ssh/sshd_config",
                                "sed -i $'/KbdInteractiveAuthentication/{iChallengeResponseAuthentication yes\\n:a;n;ba}' /etc/ssh/sshd_config || sed -n -i '/password updating/{p;:a;N;/@include common-password/!ba;s/.*\\n/auth required pam_google_authenticator.so nullok\\nauth required pam_permit.so\\n/};p' /etc/pam.d/sshd",
                                "[ ! -f /root/.google_authenticator ] && qr_code generate",
                                "systemctl restart sshd.service 2>/dev/null | systemctl restart ssh.service 2>/dev/null"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "! check_if_installed libpam-google-authenticator || ! check_if_installed qrencode || grep -q '^ChallengeResponseAuthentication no' /etc/ssh/sshd_config || ! grep -q 'ChallengeResponseAuthentication' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY109",
                            "description": "Generate new OTP authentication QR code",
                            "command": [
                                "qr_code generate"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^ChallengeResponseAuthentication yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY110",
                            "description": "Show OTP authentication QR code",
                            "command": [
                                "qr_code"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^ChallengeResponseAuthentication yes' /etc/ssh/sshd_config && [ -f /root/.google_authenticator ]"
                        },
                        {
                            "id": "SY111",
                            "description": "Disable last login banner",
                            "command": [
                                "sed -i \"s/^#\\?PrintLastLog.*/PrintLastLog no/\" /etc/ssh/sshd_config",
                                "systemctl restart ssh.service "
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^PrintLastLog yes' /etc/ssh/sshd_config"
                        },
                        {
                            "id": "SY112",
                            "description": "Enable last login banner",
                            "command": [
                                "sed -i \"s/^#\\?PrintLastLog.*/PrintLastLog yes/\" /etc/ssh/sshd_config",
                                "systemctl restart ssh.service "
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "grep -q '^PrintLastLog no' /etc/ssh/sshd_config"
                        }
                    ]
                },
                {
                    "id": "SY008",
                    "description": "Change shell system wide to BASH",
                    "about": "This will switch system wide shell to BASH",
                    "command": [
                        "export BASHLOCATION=$(grep /bash$ /etc/shells | tail -1)",
                        "sed -i \"s|^SHELL=.*|SHELL=${BASHLOCATION}|\" /etc/default/useradd",
                        "sed -i \"s|^DSHELL=.*|DSHELL=${BASHLOCATION}|\" /etc/adduser.conf",
                        "apt_install_wrapper apt-get -y purge armbian-zsh zsh-common zsh tmux",
                        "update_skel",
                        "awk -F'[/:]' '{if ($3 >= 1000 && $3 != 65534 || $3 == 0) print $1}' /etc/passwd | xargs -L1 chsh -s $(grep /bash$ /etc/shells | tail -1)"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "[[ $(cat /etc/passwd | grep \"^root:\" | rev | cut -d\":\" -f1 | cut -d\"/\" -f1| rev) == \"zsh\" ]]"
                },
                {
                    "id": "SY009",
                    "description": "Change shell system wide to ZSH",
                    "about": "This will switch system wide shell to ZSH",
                    "command": [
                        "export ZSHLOCATION=$(grep /zsh$ /etc/shells | tail -1)",
                        "sed -i \"s|^SHELL=.*|SHELL=${ZSHLOCATION}|\" /etc/default/useradd",
                        "sed -i \"s|^DSHELL=.*|DSHELL=${ZSHLOCATION}|\" /etc/adduser.conf",
                        "apt_install_wrapper apt-get -y install armbian-zsh zsh-common zsh tmux",
                        "update_skel",
                        "awk -F'[/:]' '{if ($3 >= 1000 && $3 != 65534 || $3 == 0) print $1}' /etc/passwd | xargs -L1 chsh -s $(grep /zsh$ /etc/shells | tail -1)"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "[[ $(cat /etc/passwd | grep \"^root:\" | rev | cut -d\":\" -f1 | cut -d\"/\" -f1| rev) == \"bash\" ]]"
                },
                {
                    "id": "SY010",
                    "description": "Switch to rolling release",
                    "about": "This will switch OS to rolling releases.",
                    "command": [
                        "set_rolling"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "grep -q 'apt.armbian.com' /etc/apt/sources.list.d/armbian.list && [[ -z \"$(apt-mark showhold)\" ]]"
                },
                {
                    "id": "SY011",
                    "description": "Switch to stable release",
                    "about": "This will switch OS to stable releases",
                    "command": [
                        "set_stable"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "grep -q 'beta.armbian.com' /etc/apt/sources.list.d/armbian.list && [[ -z \"$(apt-mark showhold)\" ]]"
                },
                {
                    "id": "SY012",
                    "description": "Enable read only filesystem",
                    "about": "This will enable Armbian read-only filesystem. Reboot is mandatory?\n",
                    "command": [
                        "manage_overlayfs enable"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "modinfo overlay > /dev/null 2>&1 && [[ -z $(findmnt -k /media/root-ro | tail -1) ]] && [[ \"${DISTRO}\"=Ubuntu ]]"
                },
                {
                    "id": "SY013",
                    "description": "Disable read only filesystem",
                    "about": "This will disable Armbian read-only filesystem. Reboot is mandatory?\n",
                    "command": [
                        "manage_overlayfs disable"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "command -v overlayroot-chroot > /dev/null 2>&1 && findmnt -k /media/root-ro | tail -1 | grep -w /media/root-ro > /dev/null 2>&1"
                },
                {
                    "id": "SY014",
                    "description": "Adjust welcome screen (motd)",
                    "command": [
                        "adjust_motd"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": "[ -f /etc/default/armbian-motd ]"
                },
                {
                    "id": "SY015",
                    "description": "Install alternative kernels",
                    "about": "Switching between kernels might change functionality of your device. \n\nIt might fail to boot!",
                    "command": [
                        "switch_kernels"
                    ],
                    "status": "Stable",
                    "author": "@igorpecovnik",
                    "condition": ""
                },
                {
                    "id": "SY016",
                    "description": "Distribution upgrades",
                    "condition": "[ -f /etc/armbian-distribution-status ] && release_upgrade rolling verify || release_upgrade stable verify",
                    "sub": [
                        {
                            "id": "SY101",
                            "description": "Upgrade to latest stable / LTS",
                            "about": "Release upgrade is irriversible operation which upgrades all packages. \n\nResoulted upgrade might break your build beyond repair!",
                            "command": [
                                "release_upgrade stable"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "[ -f /etc/armbian-distribution-status ] && release_upgrade stable verify"
                        },
                        {
                            "id": "SY102",
                            "description": "Upgrade to rolling unstable",
                            "about": "Release upgrade is irriversible operation which upgrades all packages. \n\nResoulted upgrade might break your build beyond repair!",
                            "command": [
                                "release_upgrade rolling"
                            ],
                            "status": "Active",
                            "author": "@igorpecovnik",
                            "condition": "[ -f /etc/armbian-distribution-status ] && release_upgrade rolling verify"
                        }
                    ]
                },
                {
                    "id": "SY017",
                    "description": "Manage device tree overlays",
                    "command": [
                        "manage_dtoverlays"
                    ],
                    "status": "Stable",
                    "author": "@viraniac @igorpecovnik",
                    "condition": "[ -n $OVERLAY_DIR ] && [ -n $BOOT_SOC ]"
                }
            ]
        },
        {
            "id": "Network",
            "description": "Fixed and wireless network settings",
            "sub": [
                {
                    "id": "NE001",
                    "description": "Configure network interfaces",
                    "sub": [
                        {
                            "id": "NE002",
                            "description": "Add / change interface",
                            "command": [
                                "network_config armbian"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": ""
                        },
                        {
                            "id": "NE003",
                            "description": "Revert to Armbian defaults",
                            "command": [
                                "default_network_config"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": ""
                        },
                        {
                            "id": "NE004",
                            "description": "Show configuration",
                            "command": [
                                "show_message <<< \"$(netplan get all)\""
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "[[ -f /etc/netplan/armbian.yaml ]]"
                        },
                        {
                            "id": "NE005",
                            "description": "Show active status",
                            "command": [
                                "show_message <<< \"$(netplan status --all)\""
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "[ -f /etc/netplan/armbian.yaml ] && [ netplan status 2>/dev/null ]"
                        }
                    ]
                }
            ]
        },
        {
            "id": "Localisation",
            "description": "Localisation",
            "sub": [
                {
                    "id": "LO001",
                    "description": "Change Global timezone",
                    "command": [
                        "dpkg-reconfigure tzdata"
                    ],
                    "status": "Stable",
                    "author": "@armbian"
                },
                {
                    "id": "LO002",
                    "description": "Change Locales reconfigure the language and character set",
                    "command": [
                        "dpkg-reconfigure locales",
                        "source /etc/default/locale ; sed -i \"s/^LANGUAGE=.*/LANGUAGE=$LANG/\" /etc/default/locale",
                        "export LANGUAGE=$LANG"
                    ],
                    "status": "Stable",
                    "author": "@armbian"
                },
                {
                    "id": "LO003",
                    "description": "Change Keyboard layout",
                    "command": [
                        "dpkg-reconfigure keyboard-configuration ; setupcon ",
                        "update-initramfs -u"
                    ],
                    "status": "Stable",
                    "author": "@armbian"
                },
                {
                    "id": "LO005",
                    "description": "Change System Hostname",
                    "command": [
                        "change_system_hostname"
                    ],
                    "status": "Stable",
                    "author": "@armbian"
                }
            ]
        },
        {
            "id": "Software",
            "description": "Run/Install 3rd party applications",
            "sub": [
                {
                    "id": "Desktops",
                    "description": "Desktop Environments",
                    "sub": [
                        {
                            "id": "XFCE",
                            "description": "XFCE desktop",
                            "sub": [
                                {
                                    "id": "XFCE01",
                                    "about": "Install XFCE:\nXfce is a lightweight desktop environment for UNIX-like operating systems. It aims to be fast and low on system resources, while still being visually appealing and user friendly.",
                                    "description": "XFCE desktop Install",
                                    "command": [
                                        "manage_desktops 'xfce' 'install'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ ! -f /usr/share/xsessions/xfce.desktop ]"
                                },
                                {
                                    "id": "XFCE02",
                                    "description": "Uninstall",
                                    "command": [
                                        "manage_desktops 'xfce' 'uninstall'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/xfce.desktop ]"
                                },
                                {
                                    "id": "XFCE03",
                                    "description": "Enable autologin",
                                    "command": [
                                        "manage_desktops 'xfce' 'auto'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/xfce.desktop ] && [ ! -f /etc/lightdm/lightdm.conf.d/22-armbian-autologin.conf ]"
                                },
                                {
                                    "id": "XFCE04",
                                    "description": "Disable autologin",
                                    "command": [
                                        "manage_desktops 'xfce' 'manual'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/xfce.desktop ] && [ -f /etc/lightdm/lightdm.conf.d/22-armbian-autologin.conf ]"
                                }
                            ]
                        },
                        {
                            "id": "Gnome",
                            "description": "Gnome desktop",
                            "sub": [
                                {
                                    "id": "GNOME01",
                                    "description": "Gnome desktop Install",
                                    "command": [
                                        "manage_desktops 'gnome' 'install'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ ! -f /usr/share/xsessions/gnome.desktop ]"
                                },
                                {
                                    "id": "GNOME02",
                                    "description": "Uninstall",
                                    "command": [
                                        "manage_desktops 'gnome' 'uninstall'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/gnome.desktop ]"
                                },
                                {
                                    "id": "GNOME03",
                                    "description": "Enable autologin",
                                    "command": [
                                        "manage_desktops 'gnome' 'auto'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/gnome.desktop ] && ! cat /etc/gdm3/custom.conf 2>/dev/null | grep AutomaticLoginEnable | grep true >/dev/null"
                                },
                                {
                                    "id": "GNOME04",
                                    "description": "Disable autologin",
                                    "command": [
                                        "manage_desktops 'gnome' 'manual'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/gnome.desktop ] && cat /etc/gdm3/custom.conf 2>/dev/null | grep AutomaticLoginEnable | grep true >/dev/null"
                                }
                            ]
                        },
                        {
                            "id": "Cinnamon",
                            "description": "Cinnamon desktop",
                            "sub": [
                                {
                                    "id": "CINNAMON01",
                                    "description": "Cinnamon desktop Install",
                                    "command": [
                                        "manage_desktops 'cinnamon' 'install'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ ! -f /usr/share/xsessions/cinnamon.desktop ] && [ ! -f /usr/share/xsessions/cinnamon2d.desktop ]"
                                },
                                {
                                    "id": "CINNAMON02",
                                    "description": "Cinnamon desktop uninstall",
                                    "command": [
                                        "manage_desktops 'cinnamon' 'uninstall'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/cinnamon.desktop ] || [ -f /usr/share/xsessions/cinnamon2d.desktop ]"
                                },
                                {
                                    "id": "CINNAMON03",
                                    "description": "Enable autologin",
                                    "command": [
                                        "manage_desktops 'cinnamon' 'auto'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/cinnamon.desktop ] && [ ! -f /etc/lightdm/lightdm.conf.d/22-armbian-autologin.conf ]"
                                },
                                {
                                    "id": "CINNAMON04",
                                    "description": "Disable autologin",
                                    "command": [
                                        "manage_desktops 'cinnamon' 'manual'"
                                    ],
                                    "status": "Stable",
                                    "author": "@igorpecovnik",
                                    "condition": "[ -f /usr/share/xsessions/cinnamon.desktop ] && [ -f /etc/lightdm/lightdm.conf.d/22-armbian-autologin.conf ]"
                                }
                            ]
                        },
                        {
                            "id": "Xapian",
                            "description": "Improve application search speed",
                            "command": [
                                "update-apt-xapian-index -u; sleep 3"
                            ],
                            "status": "Stable",
                            "author": "@igorpecovnik",
                            "condition": "systemctl is-active --quiet service display-manager"
                        }
                    ]
                },
                {
                    "id": "Netconfig",
                    "description": "Network tools",
                    "sub": [
                        {
                            "id": "NET001",
                            "description": "Install realtime console network usage monitor (nload)",
                            "command": [
                                "get_user_continue \"This operation will install nload.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y install nload"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "! check_if_installed nload"
                        },
                        {
                            "id": "NET002",
                            "description": "Remove realtime console network usage monitor (nload)",
                            "command": [
                                "get_user_continue \"This operation will purge nload.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y purge nload"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "check_if_installed nload"
                        },
                        {
                            "id": "NET003",
                            "description": "Install bandwidth measuring tool (iperf3)",
                            "command": [
                                "get_user_continue \"This operation will install iperf3.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y install iperf3"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "! check_if_installed iperf3"
                        },
                        {
                            "id": "NET004",
                            "description": "Remove bandwidth measuring tool (iperf3)",
                            "command": [
                                "get_user_continue \"This operation will purge iperf3.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y purge iperf3"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "check_if_installed iperf3"
                        },
                        {
                            "id": "NET005",
                            "description": "Install IP LAN monitor (iptraf-ng)",
                            "command": [
                                "get_user_continue \"This operation will install iptraf-ng.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y install iptraf-ng"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "! check_if_installed iptraf-ng"
                        },
                        {
                            "id": "NET006",
                            "description": "Remove IP LAN monitor (iptraf-ng)",
                            "command": [
                                "get_user_continue \"This operation will purge nload.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y purge iptraf-ng"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "check_if_installed iptraf-ng"
                        },
                        {
                            "id": "NET007",
                            "description": "Install hostname broadcast via mDNS (avahi-daemon)",
                            "command": [
                                "get_user_continue \"This operation will install avahi-daemon and add configuration files.\nDo you wish to continue?\" process_input",
                                "check_if_installed avahi-daemon",
                                "debconf-apt-progress -- apt-get -y install avahi-daemon libnss-mdns",
                                "cp /usr/share/doc/avahi-daemon/examples/sftp-ssh.service /etc/avahi/services/",
                                "cp /usr/share/doc/avahi-daemon/examples/ssh.service /etc/avahi/services/",
                                "service avahi-daemon restart"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "! check_if_installed avahi-daemon"
                        },
                        {
                            "id": "NET008",
                            "description": "Remove hostname broadcast via mDNS (avahi-daemon)",
                            "command": [
                                "get_user_continue \"This operation will purge avahi-daemon \nDo you wish to continue?\" process_input",
                                "check_if_installed avahi-daemon",
                                "systemctl stop avahi-daemon avahi-daemon.socket",
                                "debconf-apt-progress -- apt-get -y purge avahi-daemon"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "check_if_installed avahi-daemon"
                        }
                    ]
                },
                {
                    "id": "DevTools",
                    "description": "Development",
                    "sub": [
                        {
                            "id": "DEV001",
                            "description": "Install tools for cloning and managing repositories (git)",
                            "command": [
                                "get_user_continue \"This operation will install git.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y install git"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "! check_if_installed git"
                        },
                        {
                            "id": "DEV001",
                            "description": "Remove tools for cloning and managing repositories (git)",
                            "command": [
                                "get_user_continue \"This operation will remove git.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y purge git"
                            ],
                            "status": "Stable",
                            "author": "@armbian",
                            "condition": "check_if_installed git"
                        }
                    ]
                },
                {
                    "id": "Benchy",
                    "description": "System benchmaking and diagnostics",
                    "command": [
                        "see_monitoring"
                    ],
                    "status": "Stable",
                    "author": "@armbian",
                    "condition": "[ -f /usr/bin/armbianmonitor ]"
                },
                {
                    "id": "Containers",
                    "description": "Containerlization and Virtual Machines",
                    "sub": [
                        {
                            "id": "CON001",
                            "description": "Install Docker Minimal",
                            "about": "This operation will install Docker Minimal.",
                            "command": [
                                "install_docker"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "! check_if_installed docker-ce"
                        },
                        {
                            "id": "CON002",
                            "description": "Install Docker Engine",
                            "about": "This operation will install Docker Engine.",
                            "command": [
                                "install_docker engine"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "! check_if_installed docker-compose-plugin"
                        },
                        {
                            "id": "CON003",
                            "description": "Remove Docker",
                            "about": "This operation will purge Docker.",
                            "command": [
                                "apt_install_wrapper apt -y purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "check_if_installed docker-ce"
                        },
                        {
                            "id": "CON004",
                            "description": "Purge all Docker images, containers, and volumes",
                            "about": "This operation will delete all Docker images, containers, and volumes.",
                            "command": [
                                "rm -rf /var/lib/docker",
                                "rm -rf /var/lib/containerd"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "! check_if_installed docker-ce && [ -d /var/lib/docker ]"
                        }
                    ]
                },
                {
                    "id": "Media",
                    "description": "Media Servers and Editors",
                    "sub": [
                        {
                            "id": "MED001",
                            "description": "Install Plex Media server",
                            "about": "This operation will install Plex Media server.",
                            "command": [
                                "install_plexmediaserver"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "! check_if_installed plexmediaserver"
                        },
                        {
                            "id": "MED002",
                            "description": "Remove Plex Media server",
                            "about": "This operation will purge Plex Media server.",
                            "command": [
                                "apt_install_wrapper apt-get -y purge plexmediaserver",
                                "sed -i '/plexmediaserver.gpg/s/^/#/g' /etc/apt/sources.list.d/plexmediaserver.list"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "check_if_installed plexmediaserver"
                        },
                        {
                            "id": "MED003",
                            "description": "Install Emby server",
                            "about": "This operation will install Emby server.",
                            "command": [
                                "install_embyserver"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "! check_if_installed emby-server"
                        },
                        {
                            "id": "MED004",
                            "description": "Remove Emby server",
                            "about": "This operation will purge Emby server.",
                            "command": [
                                "apt_install_wrapper apt -y purge emby-server"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "check_if_installed emby-server"
                        }
                    ]
                },
                {
                    "id": "Management",
                    "description": "Remote Management tools",
                    "sub": [
                        {
                            "id": "MAN001",
                            "description": "Install Cockpit web-based management tool",
                            "about": "This operation will install Cockpit.\ncockpit cockpit-ws cockpit-system cockpit-storaged",
                            "command": [
                                "see_current_apt update",
                                "apt_install_wrapper apt -y install cockpit cockpit-ws cockpit-system cockpit-storaged "
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "! check_if_installed cockpit"
                        },
                        {
                            "id": "MAN002",
                            "description": "Purge Cockpit web-based management tool",
                            "about": "This operation will purge Cockpit.",
                            "command": [
                                "apt_install_wrapper apt -y purge cockpit"
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "check_if_installed cockpit"
                        },
                        {
                            "id": "MAN003",
                            "description": "Start Cockpit Service",
                            "command": [
                                "sudo systemctl enable --now cockpit.socket | show_infobox "
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "check_if_installed cockpit && ! systemctl is-enabled cockpit.socket > /dev/null 2>&1"
                        },
                        {
                            "id": "MAN004",
                            "description": "Stop Cockpit Service",
                            "command": [
                                "systemctl stop cockpit cockpit.socket",
                                "systemctl disable cockpit.socket | show_infobox "
                            ],
                            "status": "Stable",
                            "author": "@schwar3kat",
                            "condition": "check_if_installed cockpit && systemctl is-enabled cockpit.socket > /dev/null 2>&1"
                        }
                    ]
                }
            ]
        },
        {
            "id": "Help",
            "description": "About this tool",
            "sub": [
                {
                    "id": "HE001",
                    "description": "Contribute",
                    "command": [
                        "show_message <<< $(about_armbian_configng)"
                    ],
                    "status": "Stable",
                    "author": "@armbian"
                }
            ]
        }
    ]
}
