{
    "menu": [
        {
            "id": "System",
            "description": "System wide and admin settings",
            "sub": [
                {
                    "id": "S01",
                    "description": "Enable Armbian kernel/firmware upgrades",
                    "prompt": "This will enable Armbian kernel upgrades?\nWould you like to continue?",
                    "command": [
                        "armbian_fw_manipulate unhold"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "",
                    "condition": "[[ -n \"$(apt-mark showhold)\" ]]"
                },
                {
                    "id": "S02",
                    "description": "Disable Armbian kernel upgrades",
                    "prompt": "Disable Armbian kernel/firmware upgrades\nWould you like to continue?",
                    "command": [
                        "armbian_fw_manipulate hold"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "",
                    "condition": "[[ -z \"$(apt-mark showhold)\" ]]"
                },
                {
                    "id": "S03",
                    "description": "Edit the boot environment",
                    "prompt": "This will open /boot/armbianEnv.txt file to edit\nCTRL+S to save\nCTLR+X to exit\nwould you like to continue?",
                    "command": [
                        "nano /boot/armbianEnv.txt"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": ""
                },
                {
                    "id": "S04",
                    "description": "Install Linux headers",
                    "command": [
                        "Headers_install"
                    ],
                    "status": "Pending Review",
                    "doc_link": "https://github.com/armbian/config/wiki#System",
                    "src_reference": "https://github.com/armbian/config/blob/master/debian-config-jobs#L160",
                    "author": "https://github.com/Tearran",
                    "condition": "! are_headers_installed"
                },
                {
                    "id": "S05",
                    "description": "Remove Linux headers",
                    "command": [
                        "Headers_remove"
                    ],
                    "status": "Pending Review",
                    "doc_link": "https://github.com/armbian/config/wiki#System",
                    "src_reference": "https://github.com/armbian/config/blob/master/debian-config-jobs#L160",
                    "author": "https://github.com/Tearran",
                    "condition": "are_headers_installed"
                },
                {
                    "id": "S06",
                    "description": "Install to internal storage",
                    "command": [
                        "armbian-install"
                    ],
                    "status": "Pending Review",
                    "doc_link": "https://github.com/armbian/config/wiki#System",
                    "src_reference": "",
                    "author": "https://github.com/igorpecovnik",
                    "condition": "[[ -n $(ls /sbin/armbian-install) ]]"
                },
                {
                    "id": "S07",
                    "description": "Manage SSH login options",
                    "sub": [
                            {
                            "id": "SS01",
                            "description": "Disable root login",
                            "command": [
                                           "sed -i \"s|^#\\?PermitRootLogin.*|PermitRootLogin no|\" /etc/ssh/sshd_config",
                                           "systemctl restart sshd.service"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "grep -q '^PermitRootLogin yes'  /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS02",
                            "description": "Enable root login",
                            "command": [
                                           "sed -i \"s/^#\\?PermitRootLogin.*/PermitRootLogin yes/\" /etc/ssh/sshd_config" ,
                                           "systemctl restart sshd.service"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "grep -q '^PermitRootLogin no' /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS03",
                            "description": "Disable password login",
                            "command": [
                                           "sed -i \"s/^#\\?PasswordAuthentication.*/PasswordAuthentication no/\" /etc/ssh/sshd_config" ,
                                           "systemctl restart sshd.service"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "grep -q 'PasswordAuthentication yes' /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS04",
                            "description": "Enable password login",
                            "command": [
                                           "sed -i \"s/^#\\?PasswordAuthentication.*/PasswordAuthentication yes/\" /etc/ssh/sshd_config" ,
                                           "systemctl restart sshd.service"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "grep -q 'PasswordAuthentication no' /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS05",
                            "description": "Disable Public key authentication login",
                            "command": [
                                           "sed -i \"s/^#\\?PubkeyAuthentication.*/PubkeyAuthentication no/\" /etc/ssh/sshd_config" ,
                                           "systemctl restart sshd.service"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "grep -q 'PubkeyAuthentication yes' /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS06",
                            "description": "Enable Public key authentication login",
                            "command": [
                                           "sed -i \"s/^#\\?PubkeyAuthentication.*/PubkeyAuthentication yes/\" /etc/ssh/sshd_config" ,
                                           "systemctl restart sshd.service"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "grep -q 'PubkeyAuthentication no' /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS07",
                            "description": "Disable OTP authentication",
                            "command": [
                                           "clear",
                                           "! check_if_installed libpam-google-authenticator && ! check_if_installed qrencode || debconf-apt-progress -- apt-get -y purge libpam-google-authenticator qrencode",
                                           "sed -i \"s/^#\\?ChallengeResponseAuthentication.*/ChallengeResponseAuthentication no/\" /etc/ssh/sshd_config || sed -i \"0,/KbdInteractiveAuthentication/s//ChallengeResponseAuthentication yes/\" /etc/ssh/sshd_config" ,
                                           "sed -i '/^auth required pam_google_authenticator.so nullok/ d' /etc/pam.d/sshd",
                                           "systemctl restart sshd.service"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "grep -q 'ChallengeResponseAuthentication yes' /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS08",
                            "description": "Enable OTP authentication",
                            "command": [
                                           "check_if_installed libpam-google-authenticator || debconf-apt-progress -- apt-get -y install libpam-google-authenticator",
                                           "check_if_installed qrencode || debconf-apt-progress -- apt-get -y install qrencode",
                                           "sed -i \"s/^#\\?ChallengeResponseAuthentication.*/ChallengeResponseAuthentication yes/\" /etc/ssh/sshd_config",
                                           "sed -i $'/KbdInteractiveAuthentication/{iChallengeResponseAuthentication yes\\n:a;n;ba}' /etc/ssh/sshd_config || sed -n -i '/password updating/{p;:a;N;/@include common-password/!ba;s/.*\\n/auth required pam_google_authenticator.so nullok\\nauth required pam_permit.so\\n/};p' /etc/pam.d/sshd",
                                           "[ ! -f /root/.google_authenticator ] && qr_code generate",
                                           "systemctl restart sshd.service"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "! check_if_installed libpam-google-authenticator || ! check_if_installed qrencode || grep -q '^ChallengeResponseAuthentication no' /etc/ssh/sshd_config || ! grep -q 'ChallengeResponseAuthentication' /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS09",
                            "description": "Generate new OTP authentication QR code",
                            "command": [
                                           "qr_code generate"
                                       ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "grep -q '^ChallengeResponseAuthentication yes' /etc/ssh/sshd_config"
                            },
                            {
                            "id": "SS10",
                            "description": "Show OTP authentication QR code",
                            "command": ["qr_code"],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "Igor Pecovnik",
                            "condition": "grep -q '^ChallengeResponseAuthentication yes' /etc/ssh/sshd_config && [ -f /root/.google_authenticator ]"
                            }
                           ]
                },
                {
                    "id": "S08",
                    "description": "Change shell system wide to BASH",
                    "command": [
                        "export BASHLOCATION=$(grep /bash$ /etc/shells | tail -1)",
                        "sed -i \"s|^SHELL=.*|SHELL=${BASHLOCATION}|\" /etc/default/useradd",
                        "sed -i \"s|^DSHELL=.*|DSHELL=${BASHLOCATION}|\" /etc/adduser.conf",
                        "debconf-apt-progress -- apt-get -y purge armbian-zsh",
                        "update_skel",
                        "awk -F'[/:]' '{if ($3 >= 1000 && $3 != 65534 || $3 == 0) print $1}' /etc/passwd | xargs -L1 chsh -s $(grep /bash$ /etc/shells | tail -1)"
                    ],
                    "status": "Pending Review",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "https://github.com/igorpecovnik",
                    "condition": "[[ $(cat /etc/passwd | grep \"^root:\" | rev | cut -d\":\" -f1 | cut -d\"/\" -f1| rev) == \"zsh\" ]]"
                },
                {
                    "id": "S09",
                    "description": "Change shell system wide to ZSH",
                    "command": [
                        "export ZSHLOCATION=$(grep /zsh$ /etc/shells | tail -1)",
                        "sed -i \"s|^SHELL=.*|SHELL=${ZSHLOCATION}|\" /etc/default/useradd",
                        "sed -i \"s|^DSHELL=.*|DSHELL=${ZSHLOCATION}|\" /etc/adduser.conf",
                        "debconf-apt-progress -- apt-get -y install armbian-zsh",
                        "update_skel",
                        "awk -F'[/:]' '{if ($3 >= 1000 && $3 != 65534 || $3 == 0) print $1}' /etc/passwd | xargs -L1 chsh -s $(grep /zsh$ /etc/shells | tail -1)"
                    ],
                    "status": "Pending Review",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "https://github.com/igorpecovnik",
                    "condition": "[[ $(cat /etc/passwd | grep \"^root:\" | rev | cut -d\":\" -f1 | cut -d\"/\" -f1| rev) == \"bash\" ]]"
                },
                {
                    "id": "S10",
                    "description": "Switch to rolling release",
                    "prompt": "This will switch to rolling releases\n\nwould you like to continue?",
                    "command": [ "set_rolling" ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "https://github.com/armbian/config/blob/master/debian-config-jobs#L1446",
                    "author": "Igor Pecovnik",
                    "condition": "grep -q 'apt.armbian.com' /etc/apt/sources.list.d/armbian.list && [[ -z \"$(apt-mark showhold)\" ]]"
                },
                {
                    "id": "S11",
                    "description": "Switch to stable release",
                    "prompt": "This will switch to stable releases\n\nwould you like to continue?",
                    "command": [ "set_stable" ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "https://github.com/armbian/config/blob/master/debian-config-jobs#L1446",
                    "author": "Igor Pecovnik",
                    "condition": "grep -q 'beta.armbian.com' /etc/apt/sources.list.d/armbian.list && [[ -z \"$(apt-mark showhold)\" ]]"
                },
                {
                    "id": "S12",
                    "description": "Enable read only filesystem",
                    "prompt": "This will enable Armbian read-only filesystem. Reboot is mandatory?\n\nWould you like to continue?",
                    "command": [ "manage_overlayfs enable" ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "Igor Pecovnik",
                    "condition": "modinfo overlay > /dev/null 2>&1 && [[ -z $(findmnt -k /media/root-ro | tail -1) ]] && [[ \"${DISTRO}\"=Ubuntu ]]"
                },
                {
                    "id": "S13",
                    "description": "Disable read only filesystem",
                    "prompt": "This will disable Armbian read-only filesystem. Reboot is mandatory?\n\nWould you like to continue?",
                    "command": [ "manage_overlayfs disable" ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "Igor Pecovnik",
                    "condition": "command -v overlayroot-chroot > /dev/null 2>&1 && findmnt -k /media/root-ro | tail -1 | grep -w /media/root-ro > /dev/null 2>&1"
                }
            ]
        },
        {
            "id": "Network",
            "description": "Fixed and wireless network settings",
            "sub": [
                {
                    "id": "N01",
                    "description": "Configure network interfaces",
                    "sub": [
                            {
                                "id": "N02",
                                "description": "Wired",
                                "sub": [
                                    {
                                        "id": "N06",
                                        "description": "Show configuration",
                                        "command": [ "netplan_wrapper \"show_message\" \"\" \"\" \"ethernets\"" ],
                                        "status": "Active",
                                        "doc_link": "",
                                        "src_reference": "",
                                        "author": "Igor Pecovnik",
                                        "condition": "[ -f /etc/netplan/30-*static-interfaces.yaml ] || [ -f /etc/netplan/10-dhcp-all-interfaces.yaml ]"
                                    },
                                    {
                                        "id": "N07",
                                        "description": "Enable DHCP on all interfaces",
                                        "command": [ "netplan_wrapper \"dhcp_all_wired_interfaces\" \"false\" \"10-dhcp-all-interfaces\" \"ethernets\" \"networkd\"" ],
                                        "status": "Active",
                                        "author": "Igor Pecovnik",
                                        "condition": "[ ! -f /etc/netplan/10-dhcp-all-interfaces.yaml ]"
                                    },
                                    {
                                        "id": "N08",
                                        "description": "Set fixed IP address",
                                        "command": [" netplan_wrapper \"set_ip\" \"true\" \"10-dhcp-all-interfaces\" \"ethernets\" \"networkd\""],
                                        "status": "Active",
                                        "doc_link": "",
                                        "src_reference": "",
                                        "author": "Igor Pecovnik",
                                        "condition": ""
                                    },
                                    {
                                        "id": "N09",
                                        "description": "Disable IPV6",
                                        "command": [" netplan_wrapper \"disable_ipv6\" \"false\" \"10-dhcp-all-interfaces\" \"ethernets\" \"networkd\""],
                                        "status": "Pending Review",
                                        "doc_link": "",
                                        "src_reference": "",
                                        "author": "Igor Pecovnik",
                                        "condition": "[ -f /etc/netplan/30-*static-interfaces.yaml ] || [ -f /etc/netplan/10-dhcp-all-interfaces.yaml ]"
                                    },
                                    {
                                        "id": "N10",
                                        "description": "Enable IPV6",
                                        "command": [" netplan_wrapper \"enable_ipv6\" \"false\" \"10-dhcp-all-interfaces\" \"ethernets\" \"networkd\""],
                                        "status": "Pending Review",
                                        "doc_link": "",
                                        "src_reference": "",
                                        "author": "Igor Pecovnik",
                                        "condition": "[ -f /etc/netplan/30-*static-interfaces.yaml ] || [ -f /etc/netplan/10-dhcp-all-interfaces.yaml ]"
                                    },
                                    {
                                        "id": "N11",
                                        "description": "Disable wired networking",                                    
                                        "command": [ "rm -f /etc/netplan/10-dhcp-all-interfaces.yaml /etc/netplan/30-*static-interfaces.yaml" ],
                                        "condition": "[ -f /etc/netplan/30-*static-interfaces.yaml ] || [ -f /etc/netplan/10-dhcp-all-interfaces.yaml ]",
                                        "status": "Active",
                                        "author": "Igor Pecovnik"
                                    }
                                ]
                            },
                            {
                                "id": "N03",
                                "description": "Wireless",
                                "sub": [
                                    {
                                        "id": "N25",
                                        "description": "Show configuration",
                                        "command": [ "netplan_wrapper \"show_message\" \"\" \"\" \"wifis\"" ],
                                        "condition": "[ -f /etc/netplan/20-dhcp-wlan-interface.yaml ]",
                                        "status": "Active",
                                        "author": "Igor Pecovnik"
                                    },
                                    {
                                        "id": "N26",
                                        "description": "Disable wireless networking",
                                        "command": [ "rm -f /etc/netplan/20-dhcp-wlan-interface.yaml" ],
                                        "condition": "[ -f /etc/netplan/20-dhcp-wlan-interface.yaml ]",
                                        "status": "Active",
                                        "author": "Igor Pecovnik"
                                    },
                                    {
                                        "id": "N27",
                                        "description": "Disable IPV6",
                                        "command": [" netplan_wrapper \"disable_ipv6\" \"false\" \"20-dhcp-wlan-interface\" \"wifis\" \"networkd\""],
                                        "condition": "[ -f /etc/netplan/20-dhcp-wlan-interface.yaml ]",
                                        "status": "Active",
                                        "author": "Igor Pecovnik"
                                    },
                                    {
                                        "id": "N28",
                                        "description": "Enable IPV6",
                                        "command": [" netplan_wrapper \"enable_ipv6\" \"false\" \"20-dhcp-wlan-interface\" \"wifis\" \"networkd\""],
                                        "condition": "[ -f /etc/netplan/20-dhcp-wlan-interface.yaml ]",
                                        "status": "Active",
                                        "author": "Igor Pecovnik"
                                    },
                                    {
                                        "id": "N29",
                                        "description": "Enable DHCP on wireless network interface",
                                        "command": [
                                                    "wifi_connect"
                                                ],
                                        "status": "Active",
                                        "author": "Igor Pecovnik",
                                        "condition": "[ ! -f /etc/netplan/20-dhcp-wlan-interface.yaml ]"
                                    }
                                ]
                            },
                            {
                                "id": "N04",
                                "description": "Show common configs",
                                "command": [ "show_message <<< \"$(sudo netplan get all)\"" ],
                                "status": "Active",
                                "doc_link": "",
                                "src_reference": "",
                                "author": "Igor Pecovnik",
                                "condition": ""
                            },
                            {
                                "id": "N05",
                                "description": "Apply common configs",
                                "prompt": "This will apply new network configuration\n\nwould you like to continue?",
                                "command": [ "netplan apply" ],
                                "status": "Active",
                                "doc_link": "",
                                "src_reference": "",
                                "author": "Igor Pecovnik",
                                "condition": ""
                            },
                            {
                                "id": "N90",
                                "description": "Display status",
                                "command": [ "show_message <<< \"$(sudo netplan status)\"" ],
                                "status": "Active",
                                "doc_link": "",
                                "src_reference": "",
                                "author": "Igor Pecovnik",
                                "condition": ""
                            }
                            ]
                },
                {
                    "id": "N13",
                    "description": "Install Bluetooth support",
                    "command": [
                        "see_current_apt ",
                        "debconf-apt-progress -- apt-get -y install bluetooth bluez bluez-tools",
                        "check_if_installed xserver-xorg && debconf-apt-progress -- apt-get -y --no-install-recommends install pulseaudio-module-bluetooth blueman"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "",
                    "condition": "! check_if_installed bluetooth && ! check_if_installed bluez && ! check_if_installed bluez-tools"
                },
                {
                    "id": "N14",
                    "description": "Remove Bluetooth support",
                    "command": [
                        "see_current_apt ",
						"debconf-apt-progress -- apt-get -y remove bluetooth bluez bluez-tools",
						"check_if_installed xserver-xorg && debconf-apt-progress -- apt-get -y remove pulseaudio-module-bluetooth blueman",
                        "debconf-apt-progress -- apt -y -qq autoremove"
		            ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "",
                    "condition": "check_if_installed bluetooth || check_if_installed bluez || check_if_installed bluez-tools"
                },
                {
                    "id": "N15",
                    "description": "Bluetooth Discover",
                    "prompt": "This will enable bluetooth and discover devices\n\nWould you like to continue?",
                    "command": [ "connect_bt_interface" ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "",
                    "condition": "check_if_installed bluetooth || check_if_installed bluez || check_if_installed bluez-tools"
                },
                {
                    "id": "N16",
                    "description": "Toggle system IPv6/IPv4 internet protocol",
                    "prompt": "This will toggle your internet protocol\nWould you like to continue?",
                    "command": [ "toggle_ipv6 | show_infobox" ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": ""
                }
            ]
        },
        {
            "id": "Localisation",
            "description": "Localisation",
            "sub": [
                {
                    "id": "L00",
                    "description": "Change Global timezone (WIP)",
                    "command": [
						"dpkg-reconfigure tzdata"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": ""
                },
                {
                    "id": "L01",
                    "description": "Change Locales reconfigure the language and character set",
                    "command": [
                        	"dpkg-reconfigure locales",
							"source /etc/default/locale ; sed -i \"s/^LANGUAGE=.*/LANGUAGE=$LANG/\" /etc/default/locale",
		                    "export LANGUAGE=$LANG"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": ""
                },
                {
                    "id": "L02",
                    "description": "Change Keyboard layout",
                    "command": [
						"dpkg-reconfigure keyboard-configuration ; setupcon ",
			    "update-initramfs -u"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": ""
                },
                {
                    "id": "L03",
                    "description": "Change APT mirrors",
                    "prompt": "This will change the APT mirrors\nWould you like to continue?",
                    "command": [
                        "get_user_continue \"This is only a frontend test\" process_input"
                    ],
                    "disabled": true,
                    "status": "Active",
                    "author": ""
                }
            ]
        },
        {
            "id": "Software",
            "description": "Run/Install 3rd party applications",
            "sub": [
                {
                    "id": "SW01",
                    "description": "Desktop Environments",
                    "sub": [
                        {
                            "id": "SW02",
                            "description": "Install XFCE desktop",
                            "command": [ "install_de \"xfce\""],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": ""
                        },
                        {
                            "id": "SW03",
                            "description": "Install Gnome desktop",
                            "command": [ "install_de \"gnome\""],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": ""
                        },
                        {
                            "id": "SW04",
                            "description": "Install i3-wm desktop",
                            "command": [ "install_de \"i3-wm\""],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": ""
                        },
                        {
                            "id": "SW05",
                            "description": "Install Cinnamon desktop",
                            "command": [ "install_de \"cinnamon\""],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": ""
                        },
                        {
                            "id": "SW06",
                            "description": "Install kde-neon desktop",
                            "command": [ "install_de \"kde-neon\""],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": ""
                        }
                    ]
                },
                {
                    "id": "SW07",
                    "description": "Network tools",
                    "sub": [
                        {
                            "id": "SW08",
                            "description": "Install realtime console network usage monitor (nload)",
                            "command": [
                                "get_user_continue \"This operation will install nload.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y install nload"
                            ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "! check_if_installed nload"
                        },
                        {
                            "id": "SW09",
                            "description": "Remove realtime console network usage monitor (nload)",
                            "command": [
                                "get_user_continue \"This operation will purge nload.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y purge nload"
                            ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "check_if_installed nload"
                        },
                        {
                            "id": "SW10",
                            "description": "Install bandwidth measuring tool (iperf3)",
                            "command": [
                                "get_user_continue \"This operation will install iperf3.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y install iperf3"
                            ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "! check_if_installed iperf3"
                        },
                        {
                            "id": "SW11",
                            "description": "Remove bandwidth measuring tool (iperf3)",
                            "command": [
                                "get_user_continue \"This operation will purge iperf3.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y purge iperf3"
                            ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "check_if_installed iperf3"
                        },
                        {
                            "id": "SW12",
                            "description": "Install IP LAN monitor (iptraf-ng)",
                            "command": [
                                "get_user_continue \"This operation will install iptraf-ng.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y install iptraf-ng"
                            ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "! check_if_installed iptraf-ng"
                        },
                        {
                            "id": "SW13",
                            "description": "Remove IP LAN monitor (iptraf-ng)",
                            "command": [
                                "get_user_continue \"This operation will purge nload.\n\nDo you wish to continue?\" process_input",
                                "debconf-apt-progress -- apt-get -y purge iptraf-ng"
                            ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "check_if_installed iptraf-ng"
                        },
                        {
                            "id": "SW14",
                            "description": "Install hostname broadcast via mDNS (avahi-daemon)",
                            "command": [
                                "get_user_continue \"This operation will install avahi-daemon and add configuration files.\nDo you wish to continue?\" process_input",
                                "check_if_installed avahi-daemon",
                                "debconf-apt-progress -- apt-get -y install avahi-daemon libnss-mdns",
                                "cp /usr/share/doc/avahi-daemon/examples/sftp-ssh.service /etc/avahi/services/",
                                "cp /usr/share/doc/avahi-daemon/examples/ssh.service /etc/avahi/services/",
                                "service avahi-daemon restart"
                            ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "! check_if_installed avahi-daemon"
                        },
                        {
                            "id": "SW15",
                            "description": "Remove hostname broadcast via mDNS (avahi-daemon)",
                            "command": [
                                "get_user_continue \"This operation will purge avahi-daemon \nDo you wish to continue?\" process_input",
                                "check_if_installed avahi-daemon",
                                "systemctl stop avahi-daemon avahi-daemon.socket",
                                "debconf-apt-progress -- apt-get -y purge avahi-daemon"
                            ],
                            "status": "Active",
                            "doc_link": "",
                            "src_reference": "",
                            "author": "",
                            "condition": "check_if_installed avahi-daemon"
                        }
                    ]
                },
                {
                "id": "SW16",
                "description": "Development",
                "sub": [
                    {
                        "id": "SW17",
                        "description": "Install tools for cloning and managing repositories (git)",
                        "command": [
                            "get_user_continue \"This operation will install git.\n\nDo you wish to continue?\" process_input",
                            "debconf-apt-progress -- apt-get -y install git"
                        ],
                        "status": "Active",
                        "doc_link": "",
                        "src_reference": "",
                        "author": "",
                        "condition": "! check_if_installed git"
                     },
                     {
                        "id": "SW18",
                        "description": "Remove tools for cloning and managing repositories (git)",
                        "command": [
                            "get_user_continue \"This operation will remove git.\n\nDo you wish to continue?\" process_input",
                            "debconf-apt-progress -- apt-get -y purge git"
                        ],
                        "status": "Active",
                        "doc_link": "",
                        "src_reference": "",
                        "author": "",
                        "condition": "check_if_installed git"
                     }
                    ]
                },
                {
                    "id": "SW19",
                    "description": "Update Application Repository",
                    "prompt": "This will update the apt repository\nWould you like to continue?",
                    "command": [ "debconf-apt-progress -- apt update" ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": ""
                },
                {
                    "id": "SW20",
                    "description": "SWystem benchmaking and diagnostics",
                    "command": [
                        "see_monitoring"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": "",
                    "condition": "[ -f /usr/bin/armbianmonitor ]"
        
                }
            ]
        },
        {
            "id": "Help",
            "description": "About this app",
            "sub": [
                {
                    "id": "H00",
                    "description": "About This system. (WIP)",
                    "command": [
                        "show_message <<< \"This app is to help execute procedures to configure your system\n\nSome options may not work on manually modified systems\""
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": ""
                },
                {
                    "id": "H02",
                    "description": "List of Config function(WIP)",
                    "command": [
                        "show_message <<< see_use"
                    ],
                    "status": "Active",
                    "doc_link": "",
                    "src_reference": "",
                    "author": ""
                }
            ]
        }
    ]
}
